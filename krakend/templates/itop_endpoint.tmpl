{
    "endpoint": "{{ .endpoint }}",
    "method": "{{ .method }}",
    "output_encoding": "no-op",
    "input_query_strings": {{ marshal .input_query_strings }},
    "input_headers": [
        {{ if empty (env "ITOP_AUTH_USER" | trim) }}
            "Authorization"
            {{ if eq (env "COOKIE_PASS") "1" }}
                , "Cookie"
            {{ end }}
        {{ end }}
    ],
    "backend": [
        {
            "url_pattern": "{{ env "ITOP_BASE_PATH" }}/webservices/rest.php?version=1.4&login_mode={{ default "basic" (env "ITOP_AUTH_MODE" | trim) }}",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "encoding": "no-op",
            "extra_config": {
                "modifier/martian": {
                    "fifo.Group": {
                        "scope": ["request", "response"],
                        "modifiers": [
                            {{ if not (empty (env "ITOP_AUTH_USER" | trim)) }}
                                {
                                    "header.Modifier": {
                                        "scope": ["request"],
                                        "name": "Authorization",
                                        "value": "Basic {{ printf `%v:%v` (env "ITOP_AUTH_USER" | trim) (env "ITOP_AUTH_PWD" | trim) | b64enc }}"
                                    }
                                },
                                {
                                    "header.Blacklist": {
                                        "scope": ["request", "response"],
                                        "names": ["Cookie", "Set-Cookie"]
                                    }
                                }
                            {{ else if ne (env "COOKIE_PASS") "1" }}
                                {
                                    "header.Blacklist": {
                                        "scope": ["request", "response"],
                                        "names": ["Cookie", "Set-Cookie"]
                                    }
                                }
                            {{ end }}
                        ]
                    }
                },
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    {{if eq (env "LUA_LIVE_RELOAD") "1" }}"live": true,{{end}}
                    "sources": ["lua/script.lua", "lua/rxi-json.lua"],
                    "md5": {
                        "lua/script.lua": "25faffd456dc36856de2be35c884ea8c",
                        "lua/rxi-json.lua": "99e51c5cdcfb9bd2bca4562a77397cfa"
                    },
                    "pre": "{{ .backend_req_script }}",
                    "post": "{{ .backend_res_script }}"
                }
            }
        }
    ]
}