{
  "$schema": "https://www.krakend.io/schema/v3.json",
  "version": 3,
  "name": "iTop REST API Gateway",
  "port": 8000,
  "cache_ttl": "300s",
  "timeout": "3s",
  "extra_config": {
    "security/cors": {
      "allow_origins": [
        "*"
      ],
      "expose_headers": [
        "Content-Length"
      ],
      "max_age": "12h",
      "allow_methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "allow_headers": [
        "Authorization",
        "Origin",
        "Content-Type"
      ],
      "allow_credentials": true
    },
    "telemetry/logging": {
      "level": "DEBUG",
      "prefix": "[KRAKEND]",
      "syslog": false,
      "stdout": true,
      "format": "default"
    },
    "telemetry/logstash": {
      "enabled": false
    }
  },
  "host": [
    "http://host.docker.internal:8000"
  ],
  "endpoints": [
    
    
      {
    "endpoint": "/v1/{objectClass}",
    "method": "GET",
    "output_encoding": "no-op",
    "input_query_strings": ["output_fields","limit","page","where","filter"],
    "input_headers": ["Authorization"],
    "backend": [
        {
            "url_pattern": "/webservices/rest.php?version=1.4",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "extra_config":{
            
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    
                    "sources": ["lua/script.lua"],
                    "pre": "get_object_list(request.load())",
                    "post": "local req = request.load(); handle_list_response(response.load(), req:params('Page'), req:params('Limit'));"
                }
            }
        }
    ]
}
    
    ,
      {
    "endpoint": "/v1/{objectClass}",
    "method": "POST",
    "output_encoding": "no-op",
    "input_query_strings": ["output_fields","api_comment"],
    "input_headers": ["Authorization"],
    "backend": [
        {
            "url_pattern": "/webservices/rest.php?version=1.4",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "extra_config":{
            
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    
                    "sources": ["lua/script.lua"],
                    "pre": "create_object(request.load())",
                    "post": "handle_create_response(response.load())"
                }
            }
        }
    ]
}
    
    ,
      {
    "endpoint": "/v1/{objectClass}/{objectId}",
    "method": "GET",
    "output_encoding": "no-op",
    "input_query_strings": ["output_fields"],
    "input_headers": ["Authorization"],
    "backend": [
        {
            "url_pattern": "/webservices/rest.php?version=1.4",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "extra_config":{
            
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    
                    "sources": ["lua/script.lua"],
                    "pre": "get_object_by_id(request.load())",
                    "post": "handle_object_response(response.load())"
                }
            }
        }
    ]
}
    
    ,
      {
    "endpoint": "/v1/{objectClass}/{objectId}",
    "method": "PUT",
    "output_encoding": "no-op",
    "input_query_strings": ["output_fields","api_comment"],
    "input_headers": ["Authorization"],
    "backend": [
        {
            "url_pattern": "/webservices/rest.php?version=1.4",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "extra_config":{
            
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    
                    "sources": ["lua/script.lua"],
                    "pre": "update_object_by_id(request.load())",
                    "post": "handle_object_response(response.load())"
                }
            }
        }
    ]
}
    
    ,
      {
    "endpoint": "/v1/{objectClass}/{objectId}",
    "method": "DELETE",
    "output_encoding": "no-op",
    "input_query_strings": ["api_comment",""],
    "input_headers": ["Authorization"],
    "backend": [
        {
            "url_pattern": "/webservices/rest.php?version=1.4",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "extra_config":{
            
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    
                    "sources": ["lua/script.lua"],
                    "pre": "delete_object_by_id(request.load())",
                    "post": "handle_delete_response(response.load())"
                }
            }
        }
    ]
}
    
    ,
      {
    "endpoint": "/v1/{objectClass}/{objectId}/comments/{caseLog}",
    "method": "GET",
    "output_encoding": "no-op",
    "input_query_strings": [],
    "input_headers": ["Authorization"],
    "backend": [
        {
            "url_pattern": "/webservices/rest.php?version=1.4",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "extra_config":{
            
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    
                    "sources": ["lua/script.lua"],
                    "pre": "get_case_log_entries(request.load())",
                    "post": "local req = request.load(); handle_case_log_response(response.load(), req:params('CaseLog'));"
                }
            }
        }
    ]
}
    
    ,
      {
    "endpoint": "/v1/{objectClass}/{objectId}/comments/{caseLog}",
    "method": "POST",
    "output_encoding": "no-op",
    "input_query_strings": ["api_comment"],
    "input_headers": ["Authorization"],
    "backend": [
        {
            "url_pattern": "/webservices/rest.php?version=1.4",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "extra_config":{
            
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    
                    "sources": ["lua/script.lua"],
                    "pre": "add_case_log_entry(request.load())",
                    "post": "local req = request.load(); handle_case_log_response(response.load(), req:params('CaseLog'));"
                }
            }
        }
    ]
}
    
    ,
      {
    "endpoint": "/v1/{objectClass}/{objectId}/stimulus/{stimulus}",
    "method": "POST",
    "output_encoding": "no-op",
    "input_query_strings": ["output_fields","api_comment"],
    "input_headers": ["Authorization"],
    "backend": [
        {
            "url_pattern": "/webservices/rest.php?version=1.4",
            "sd": "static",
            "method": "POST",
            "disable_host_sanitize": false,
            "extra_config":{
            
                "modifier/lua-backend": {
                    "allow_open_libs": true,
                    
                    "sources": ["lua/script.lua"],
                    "pre": "update_object_by_id(request.load(), true)",
                    "post": "handle_object_response(response.load())"
                }
            }
        }
    ]
}
    
  ],
  "output_encoding": "json",
  "disable_rest": true
}